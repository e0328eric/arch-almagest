#=========================================================================#
#
#  This snippet is comparable with coprime class and vscode --- Ver : 0.00b
#  almagest0328@gmail.com
#
#  coprime snippet, First Release Date : 2020/07/22
#  This snippet can be used from HyperSnips plugin
#
#=========================================================================#

#=========================================================================#
#
# Math Commands
#
#=========================================================================#

#Basic Command
snippet MK "math mode" iA
$${1}$$0
endsnippet

#Display Style
snippet be
\[
    $1
\]
$0
endsnippet
snippet "eq( (.+))" "Equation" br
`!p
snip.rv = '\\begin{equation} \\label{' + match.group(2) + '}'
`
    $1
\end{equation}
endsnippet

#Aligning
snippet align
\begin{align*}
    $1
\end{align*}
$0
endsnippet

#Fraction
snippet `(((\d+|\\?[a-zA-Z]+)[\^\_]?\{?(\d+|\\?[a-zA-Z]+)?\}?[\^\_]?\{?(\d+|\\?[a-zA-Z]+)?\}?)|\#(.+))\/\/` "Fraction" iA
``
    let str = m[0];
    str = str.slice(0, -2);
    if (str[0] === '#') {
        str = str.slice(1);
    }

    let results = "\\frac{" + str + "}";
    results += "{$1}$0";
    rv = results;
``
endsnippet

snippet `(((\d+|\\?[a-zA-Z]+)[\^\_]?\{?(\d+|\\?[a-zA-Z]+)?\}?[\^\_]?\{?(\d+|\\?[a-zA-Z]+)?\}?)|\#(.+))\/\.\/` "Text Fraction" iA
``
    let str = m[0];
    str = str.slice(0, -3);
    if (str[0] === '#') {
        str = str.slice(1);
    }

    let results = "\\tfrac{" + str + "}";
    results += "{$1}$0";
    rv = results;
``
endsnippet

#Setminus
snippet - "setminus" i
\setminus
endsnippet

#=========================================================================#
#
# Big Notations
#
#=========================================================================#

#sum
snippet sum "sumation" i
\sum_{$1}^{$2}$0
endsnippet

#product
snippet prod "Product" i
\prod_{$1}^{$2}$0
endsnippet

#union
snippet bcup "Bigcup" i
\bigcup_{$1}^{$2}$0
endsnippet

#intersection
snippet bcap "Bigcap" i
\bigcap_{$1}^{$2}$0
endsnippet

#integral
snippet int "Int" i
\int_{$1}^{$2}$0
endsnippet

#######Limits
#limit
snippet lim "limit" i
\lim_{$1\to ${2}}$0
endsnippet

#limsup
snippet lims "limit supremum" i
\limsup_{$1\to ${2}}$0
endsnippet

#liminf
snippet limi "limit infimum" i
\liminf_{$1\to ${2}}$0
endsnippet

#sup
snippet sup "supremum" i
\sup_{$1}$0
endsnippet

#inf
snippet inf "infimum" i
\inf_{$1}$0
endsnippet

#=========================================================================#
#
# Brackets
#
#=========================================================================#

#Bracket
snippet lrl "bracket" iA
{$1}$0
endsnippet

snippet lrr "bracket" iA
($1)$0
endsnippet

snippet LRR "bracket" iA
\left($1\right)$0
endsnippet

snippet lrb "bracket" i
\{$1\\}$0
endsnippet

snippet LRB "bracket" iA
\left\{$1\right\\}$0
endsnippet

snippet lrs "bracket" iA
[$1]$0
endsnippet

snippet LRS "bracket" iA
\left[$1\right]$0
endsnippet

snippet lra "bracket" i
\langle $1\rangle
endsnippet

snippet LRA "bracket" iA
\left\langle $1\right\rangle
endsnippet

snippet abs "bracket" i
|$1|$0
endsnippet

snippet ABS "bracket" iA
\left|$1\right|$0
endsnippet

#####Misellenuous
snippet lp "Lp space" i
\\|$1\\|_{$2}^{$3}$0
endsnippet

snippet oo "infty" i
\infty
endsnippet
